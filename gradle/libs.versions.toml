[versions]
## SDK Versions
minSdk = "21"
targetSdk = "33"
compileSdk = "33"

kotlin = "1.7.20"
gradleBuildTools = "30.0.3"
gradlePluginAndroid = "7.3.1"
kotlinxSerializationVersion = "1.4.0"

### AndroidX Framework
androidXAppCompat = "1.1.0"
androidXCore = "1.8.0"
androidXAnnotation = "1.2.0"
androidXSwipeRefreshLayout = "1.1.0"
androidXRecyclerView = "1.2.1"
### Google Flexbox
googleFlexBox = "3.0.0"
androidXCardView = "1.0.0"
androidXConstraintLayout = "2.1.4"
androidXBrowser = "1.4.0"
### Material Components
androidMaterialComponents = "1.5.0"

## Kotlinx
coroutines = "1.6.4"
### UI FlowBinding(https://github.com/ReactiveCircus/FlowBinding)
flowbinding = "1.2.0"

## Jetpack Components
androidXActivity = "1.5.0"
androidXFragment = "1.2.4"
androidXNavigation = "2.5.1"
androidXLifecycle = "2.5.0"

koin = "2.2.3"

## Network API
retrofit = "2.9.0"
retrofitKotlinxSerializationConverter = "0.8.0"
okhttp = "4.10.0"

### Timber Logger
timberLog = "4.7.1"
### Loupe ImageView Helper
zoomyImageViewHelper = "1.0.0"

### Glide Image Loader
glide = "4.14.2"

### https://github.com/kirich1409/ViewBindingPropertyDelegate
viewbindingpropertydelegate = "1.5.6"

## Unit Test
turbine = "0.10.0"
junit = "4.13.2"
androidXTest = "1.4.0"
androidXTestJUnit = "1.1.3"
androidXArchCore = "2.1.0"
androidXTestExt = "1.0.0"
androidXArch = "1.1.1"

mockito = "3.1.0"
mockK = "1.11.0"

### Instrumented Tests
espresso = "3.4.0"

### Secrets Plugin
secrets = "2.0.1"

[libraries]
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationVersion" }

### Unit Test / Instrumented Test
junit = { module = "junit:junit", version.ref = "junit" }

androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidXTest" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidXTest" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidXTest" }
androidx-test-core-ktx = { module = "androidx.test:core-ktx", version.ref = "androidXTest" }
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "androidXTestJUnit" }
androidx-test-junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidXTestJUnit" }
androidx-arch-core-common = { module = "androidx.arch.core:core-common", version.ref = "androidXArchCore" }
androidx-arch-core-runtime = { module = "androidx.arch.core:core-runtime", version.ref = "androidXArchCore" }
androidx-arch-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "androidXArchCore" }

mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito" }
mockk = { module = "io.mockk:mockk", version.ref = "mockK" }
mockk-android = { module = "org.mockito:mockito-android", version.ref = "mockK" }   # exclude module: 'objenesis'

androidx-test-espresso-core = { module = "androidx.test:espresso.espresso-core", version.ref = "espresso" }

### Koin Dependency Injection Framework
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-scope = { module = "io.insert-koin:koin-androidx-scope", version.ref = "koin" }
koin-androidx-viewmodel = { module = "io.insert-koin:koin-androidx-viewmodel", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }   # exclude group: 'org.mockito'

### AndroidX
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidXCore" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidXAnnotation" }
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "androidXActivity" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidXFragment" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "androidXSwipeRefreshLayout" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidXRecyclerView" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "androidXCardView" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidXAppCompat" }
androidx-appcompat-resources = { module = "androidx.appcompat:appcompat-resources", version.ref = "androidXAppCompat" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidXConstraintLayout" }

### Google Material Components
android-material-components = { module = "com.google.android.material:material", version.ref = "androidMaterialComponents" }

### Jetpack Components
androidx-navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidXNavigation" }
androidx-navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidXNavigation" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidXLifecycle" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidXLifecycle" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidXLifecycle" }

### Network Frameworks
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-kotlinx-serialization-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofitKotlinxSerializationConverter" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

### Loupe ImageView Helper
zoomy = { module = "io.github.imablanco:zoomy", version.ref = "zoomyImageViewHelper" }

### Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

### Coroutine Flow Binding
flowbinding-core = { module = "io.github.reactivecircus.flowbinding:flowbinding-core", version.ref = "flowbinding" }
flowbinding-android = { module = "io.github.reactivecircus.flowbinding:flowbinding-android", version.ref = "flowbinding" }
flowbinding-recyclerview = { module = "io.github.reactivecircus.flowbinding:flowbinding-recyclerview", version.ref = "flowbinding" }
flowbinding-swiperefreshlayout = { module = "io.github.reactivecircus.flowbinding:flowbinding-swiperefreshlayout", version.ref = "flowbinding" }

### Timer Log
timber-log = { module = "com.jakewharton.timber:timber", version.ref = "timberLog" }

### Glide Image Loader
glide-image-loader = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }

### ViewBindingPropertyDelegate
viewbindingpropertydelegate-noreflection = { module = "com.github.kirich1409:viewbindingpropertydelegate-noreflection", version.ref = "viewbindingpropertydelegate" }


[plugins]
androidApp = { id = "com.android.application", version.ref = "gradlePluginAndroid" }
androidLibrary = { id = "com.android.library", version.ref = "gradlePluginAndroid" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinKapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlinParcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
secrets = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secrets" }

[bundles]
kotlin = [
    "kotlin-stdlib",
    "kotlin-stdlib-jdk8",
]

unitTest = [
    "junit",
    "kotlin-test-junit",
    "androidx-arch-core-common",
    "androidx-arch-core-runtime",
    "androidx-arch-core-testing",
    "mockito-core",
    "mockk",
]
